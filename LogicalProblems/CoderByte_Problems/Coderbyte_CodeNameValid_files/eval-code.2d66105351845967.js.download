function __evalCode(codeObject,challengeObject,callback){if(!codeObject||(!codeObject.code&&codeObject.code!=='')){console.log('error with code eval, (code) key needs to exist in code object');return callback('error')}
if(!challengeObject||!challengeObject.language||!challengeObject.parameter_type||!challengeObject.editor_type){console.log('error with code eval, (language, parameter_type, editor_type) keys needs to exist in challenge object');return callback('error')}
var executeFile=challengeObject.execute_file?challengeObject.execute_file:'executeCodeTPS.php';var code=codeObject.code;var language=challengeObject.language;var file_mapping=window.__MAIN_LANGUAGE_LIST[language].file_mapping;var input1=(codeObject.inputs&&codeObject.inputs.length>0)?codeObject.inputs[0]:undefined;var input2=(codeObject.inputs&&codeObject.inputs.length>1)?codeObject.inputs[1]:undefined;var username=codeObject.username?codeObject.username:null;if(challengeObject.parameter_type==='str'){if(input1[0]!=='"'&&input1[input1.length-1]!=='"'){input1='"'+input1+'"'}}
if(input1&&challengeObject.editor_type==='algorithm'&&challengeObject.tier!=='7'){input1=input1.replace(/\$/g,'$$$$');code=window['stdin_mod_'+language](input1,input2,code)}
var params={code:code,language:language.toLowerCase(),file_mapping:file_mapping,username:username,};if(codeObject.filetree){params.filetree=JSON.stringify(codeObject.filetree)}
$.post('/backend/requests/coderunner/'+executeFile,params,function(data){callback(data)})}
function __evalSQLCode(codeObject,challengeObject,callback){if(!codeObject||!codeObject.code){console.log('error with code eval, (code) key needs to exist in code object');return callback('error')}
if(!challengeObject||!challengeObject.challenge_title||!challengeObject.table_name){console.log('error with code eval, (challenge_title, table_name) keys needs to exist in challenge object');return callback('error')}
var params={code:codeObject.code,challenge_title:challengeObject.challenge_title,table_name:challengeObject.table_name,};$.post('/backend/requests/coderunner/executeSQL.php',params,function(data){callback(data)})}
function __evalMongoDBCode(codeObject,challengeObject,callback){if(!codeObject||!codeObject.code){console.log('error with code eval, (code) key needs to exist in code object');return callback('error')}
if(!challengeObject||!challengeObject.challenge_title||!challengeObject.collection_name){console.log('error with code eval, (challenge_title, table_name) keys needs to exist in challenge object');return callback('error')}
try{JSON.parse(codeObject.code)}catch(e){callback(JSON.stringify({'output':'Error: invalid JSON sent to database command',}));return}
var params={code:JSON.stringify(JSON.parse(codeObject.code)),challenge_title:challengeObject.challenge_title,collection_name:challengeObject.collection_name,};$.post('/backend/requests/coderunner/executeMongoDBQuery.php',params,function(data){callback(data)})}
function __evalGraphQLCode(codeObject,challengeObject,callback){if(!codeObject||!codeObject.code){console.log('error with code eval, (code) key needs to exist in code object');return callback('error')}
if(!challengeObject||!challengeObject.challenge_title){console.log('error with code eval, (challenge_title) keys needs to exist in challenge object');return callback('error')}
var params={code:codeObject.code,challenge_title:challengeObject.challenge_title,};$.post('/backend/requests/coderunner/executeGraphQL.php',params,function(data){callback(data)})}
function __evalFrontendCode(codeObject,challengeObject,callback){if(!codeObject||(!codeObject.code&&codeObject.code!=='')){console.log('error with code eval, (code) key needs to exist in code object');return callback('error')}
var usingOurSandbox={'React':'react','Angular':'angular','Vue':'vue','AngularJS':'angularjs','Flutter':'flutter','ReactTypeScript':'react-ts','ReactNative':'react-native','JavaScript':'webpack','HTML':'html','Bootstrap':'html',};var frontEndSandboxUrl=codeObject.useFrontEndTestRoute?'https://cbfe.app/test/':'https://cbfe.app/project/';var parameters;var baseLanguage;if(challengeObject.challenge_title.indexOf('HTML')!==-1)baseLanguage='HTML';if(challengeObject.challenge_title.indexOf('Bootstrap')!==-1)baseLanguage='HTML';if(challengeObject.challenge_title.indexOf('React')!==-1)baseLanguage='React';if(challengeObject.challenge_title.indexOf('React TypeScript')!==-1)baseLanguage='ReactTypeScript';if(challengeObject.challenge_title.indexOf('React Native')!==-1)baseLanguage='ReactNative';if(challengeObject.challenge_title.indexOf('Flutter')!==-1)baseLanguage='Flutter';if(challengeObject.challenge_title.indexOf('JavaScript')!==-1)baseLanguage='JavaScript';if(challengeObject.challenge_title.indexOf('Vue')!==-1)baseLanguage='Vue';if(challengeObject.challenge_title.indexOf('Angular')!==-1)baseLanguage='Angular';if(challengeObject.challenge_title.indexOf('AngularJS')!==-1)baseLanguage='AngularJS';if(challengeObject.ungraded&&challengeObject.language){baseLanguage=challengeObject.language;baseLanguage=baseLanguage.replace('Vue.js','Vue')}
if(baseLanguage&&usingOurSandbox[baseLanguage]){parameters=window.__DEFAULT_CODE_FRONTEND_BASE_CODERBYTE[baseLanguage](codeObject.code);frontEndSandboxUrl+=usingOurSandbox[baseLanguage];if(codeObject.frontEndRenderingKey){frontEndSandboxUrl+='/'+codeObject.frontEndRenderingKey}
if(codeObject.filetree){var newFileTreeStructure={'files':{}};var node;for(var i=0;i<codeObject.filetree.length;i++){node=codeObject.filetree[i];newFileTreeStructure.files[node.name]={content:node.content}}
parameters=newFileTreeStructure}}else{console.log('error running front-end code',challengeObject);return callback('error')}
fetch(frontEndSandboxUrl,{method:'POST',headers:{'Content-Type':'application/json','Accept':'application/json'},body:JSON.stringify(parameters)}).then(x=>x.json()).then(data=>{callback(data)}).catch((error)=>{console.log('error with front-end sandbox',error);callback(error)})}
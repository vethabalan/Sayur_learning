$(document).ready(function(){Vue.component('vue-multiselect',window.VueMultiselect.default);var app=new Vue({el:'#fullscreenEditorArea',data:{'icons':window.__editor_shared.icons,'svgIcons':window.__editor_shared.svgIcons,'authObject':window.__authObject,'challengeInfo':window.__challengeInfo,'errorObject':window.__errorObject,'orgInfo':window.__orgInfo,'guestView':!window.__authObject.cookieSet,'dropdownLanguages':window.__MAIN_DROP_DOWN_LANGUAGES,'dropdownLanguagesFrontend':[],'editor':null,'spreadsheet':null,'editorVimFunction':!1,'editorVimObject':null,'editorVimMode':!1,'editorEmacsFunction':!1,'editorEmacsObject':null,'editorEmacsMode':!1,'editorLightMode':!1,'editorAppSetupStarted':!1,'currentlyRunningCode':!1,'currentlyRunningTests':!1,'currentlySubmitting':!1,'initDisplayCode':'language template not found','mobileDeviceShowing':!0,'mobileDeviceType':null,'mobileDeviceContent':'','consoleOutputLog':['output logs will appear here',''],'autoClearLog':!1,'confirmSubmitCode':!1,'errorFromLastOutput':!1,'bothTestCasesCorrect':!1,'exampleArgInput':null,'exampleArgInput2':null,'secondParamRequired':!1,'languageFromDropdown':null,'showingAllLanguagesDropdown':!1,'showValidatedFeedback':null,'showTestCasesForSpreadsheet':[0,0],'SQLTableOutput':'<p>Your table output will appear here</p>','SQLOriginalTableOutput':!1,'SQLShowingOriginalTable':!1,'MongoDBOriginalTableOutput':!1,'saveKey':!1,'saveKeyFiletree':!1,'saveKeyFiletreeContents':!1,'frontEndRenderingKey':!1,'firstTimeKey':'__cb_candidate_first_time','copiedCodeKey':'last-copied-code-from-coderbyte','editorThemeKey':'__cb_editor_theme','alreadyCopyPasted':!1,'timerArea':'__insert_time_left','projectBasedChallenge':!1,'filetreeSelectedParentDir':undefined,'filetreeSelected':undefined,'filetree':[],'filetreeWithContents':[],'modals':{'copying':!1,'screenRecordingBlocked':!1,'assessmentBlockedRedo':!1,'firstTimeOnEditor':!1,'guestWantsToSubmit':!1,'outputModificationInfo':!1,},'webSearchCache':{},'searchEnabledForOrg':!1,'webSearchProps':{'mainSearchContainer':'.gsc-control-wrapper-cse','textArea':'#gsc-i-id1','searchButton':'.gsc-search-button','searchResultRow':'.gsc-webResult.gsc-result','pageModalDataContainer':'#modalPageData','pageModalDataContainerShow':!1,'toolbarExternalLink':!1,'pageiframeContainer':'#webSearchFrame','timesAttempted':0,},},created:function(){if(this.authObject&&this.authObject.assessmentDetails&&this.authObject.assessmentDetails.logo!==''){$('#header_left').css({'background':'none'})}
this.getCodeTemplate();if(this.challengeInfo.ungraded){this.addExtraLanguagesToList()}
this.editorAppSetupStarted=!0;if(this.challengeInfo.ungraded){var origLang=this.challengeInfo.language;this.challengeInfo.languageOriginal=origLang;var urlParams=new URLSearchParams(window.location.search);var setNewLanguage=urlParams.get('setLanguage');var languageArray=this.challengeInfo.editor_type==='frontend'?this.dropdownLanguagesFrontend:this.dropdownLanguages;if(setNewLanguage){var validLanguage=!1;for(var i=0;i<languageArray.length;i++){if(languageArray[i].value===setNewLanguage){validLanguage=!0;break}}
if(validLanguage){this.challengeInfo.language=setNewLanguage}}}
this.saveKey='saved-code-'+this.challengeInfo.challenge_title.replace(/\s/g,'')+'-'+this.challengeInfo.language;this.saveKeyFiletree='saved-code-filetree-'+this.challengeInfo.challenge_title.replace(/\s/g,'')+'-'+this.challengeInfo.language;this.saveKeyFiletreeContents='saved-code-filetreecontents-'+this.challengeInfo.challenge_title.replace(/\s/g,'')+'-'+this.challengeInfo.language;if(this.orgInfo){this.saveKey+='-'+this.orgInfo.test_id;if(this.authObject.email){this.saveKey+='-'+this.authObject.email}}
this.languageFromDropdown=this.challengeInfo.language;this.exampleArgInput=this.challengeInfo.example_arg;if(this.challengeInfo.parameter_type.indexOf(',')!==-1){this.secondParamRequired=!0;this.exampleArgInput2=this.challengeInfo.example_arg;$('.input_for_code').css({'width':'200px'})}
if(this.challengeInfo.editor_type==='languagespecific'&&!this.challengeInfo.ungraded){if(this.challengeInfo.challenge_title.indexOf('Android')!==-1){this.mobileDeviceType='Android';this.mobileDeviceContent=window.__DEFAULT_TEMPLATE_FOR_MOBILE_UI[this.challengeInfo.challenge_title]()}
if(this.challengeInfo.challenge_title.indexOf('iOS')!==-1){this.mobileDeviceType='iOS';this.mobileDeviceContent=window.__DEFAULT_TEMPLATE_FOR_MOBILE_UI[this.challengeInfo.challenge_title]()}}
if(window.__DEFAULT_CODE_PROJECT_BASED_CHALLENGES[this.challengeInfo.challenge_title]){this.projectBasedChallenge=!0}
if(this.challengeInfo.ungraded&&this.challengeInfo.filetree&&this.challengeInfo.filetreeWithContents){this.projectBasedChallenge=!0}
if(this.orgInfo&&this.challengeInfo.editor_type==='algorithm'){if(this.orgInfo.languages&&typeof this.orgInfo.languages==='object'&&this.orgInfo.languages.length>0){if(this.orgInfo.languages.indexOf(this.languageFromDropdown)===-1){this.languageFromDropdown=this.orgInfo.languages[0];this.changeLanguage()}}}
if(this.orgInfo){var firstTimeSaved=window.localStorage.getItem(this.firstTimeKey);if(!firstTimeSaved){this.modals.firstTimeOnEditor=!0;window.localStorage.setItem(this.firstTimeKey,!0)}}
var version=window.__MAIN_LANGUAGE_LIST[this.challengeInfo.language]?window.__MAIN_LANGUAGE_LIST[this.challengeInfo.language].version:null;if(version&&this.challengeInfo.execute_file.indexOf('TPS')===-1){this.consoleOutputLog.unshift(version,'')}
if(this.challengeInfo.execute_file.indexOf('TPS')!==-1){for(var i=0;i<this.dropdownLanguages.length;i++){if(this.dropdownLanguages[i].value==='Python'){this.dropdownLanguages.splice(i,1);break}}}
if(window.location.href.indexOf('__nopretty=true')!==-1){window.__nopretty=!0}},mounted:function(){var that=this;if(this.errorObject&&this.errorObject.error){console.log(this.errorObject);return}
this.setupSplitPanes();if(this.challengeInfo.editor_type!=='spreadsheet'){this.setupMonacoEditor()}else{this.spreadsheet=!0}
if(this.orgInfo){this.beginTimer();this.filterLanguages();if(this.orgInfo.org_slug==='uxtesting-jhafh'){return}
if(this.orgInfo&&this.challengeInfo.allow_reference_search&&this.challengeInfo.editor_type!=='spreadsheet'){this.searchEnabledForOrg=!0;setTimeout(function(){console.log('web search is ready');that.setupEventListenerOnWebSearch()},3000)}}
if(this.challengeInfo.editor_type==='sqlsandbox'){if(this.challengeInfo.table_name.indexOf('maintable_')!==-1){this.deleteTableOnSessionEnd()}
this.getOriginalTableOnLoad()}
if(this.challengeInfo.editor_type==='mongodbsandbox'){this.deleteCollectionOnSessionEnd();this.getOriginalCollectionOnLoad()}
if(this.challengeInfo.editor_type==='spreadsheet'){this.deleteSpreadsheetOnSessionEnd()}},watch:{filetree:{handler:function(before,after){this.fileTreeConstructWithContent()},deep:!0,},},methods:{setupSplitPanes:function(){var that=this;var onDragFn=function(){console.log('** resizing editor **');if(that.editor){that.editor.layout()}};if(this.challengeInfo.editor_type==='spreadsheet'){var chalDescSplitParams={orientation:'vertical',limit:400,position:'24%',onDrag:onDragFn,};var codeSplitParams=!1}else{var chalDescSplitParams={orientation:'vertical',limit:300,position:'24%',onDrag:onDragFn,};var splitterLeft={orientation:'horizontal',limit:80,position:'37%',onDrag:onDragFn,};var codeSplitParams={orientation:'vertical',limit:300,position:'62%',onDrag:onDragFn,}}
if(chalDescSplitParams){var splitter=$('#splitPanes').height(500).split(chalDescSplitParams)}
if(splitterLeft&&this.projectBasedChallenge){var splitterFiletree=$('#chalDescription').height(500).split(splitterLeft);$('.chalInstructions').css({'padding-bottom':'0px'})}
if(codeSplitParams){var splitterEditor=$('#codingArea').height(500).split(codeSplitParams)}
setTimeout(function(){var body=document.body;var html=document.documentElement;var _height=Math.max(body.scrollHeight,body.offsetHeight,html.clientHeight,html.scrollHeight,html.offsetHeight);$('#splitPanes, #chalDescription, #codingArea').css({'height':(_height-40)+'px'});$('.chalInstructions').css({'height':'auto'});if(that.challengeInfo.editor_type==='spreadsheet'){$('.spreadsheetEmbed').css({'height':(_height-40)+'px'})}},0)},setupMonacoEditor:function(){require.config({waitSeconds:0,paths:{'vs':'https://coderbytejs.s3.amazonaws.com/monaco-editor/min/vs','monaco-vim':'https://coderbytejs.s3.amazonaws.com/monaco-vim/dist/monaco-vim','monaco-emacs':'https://coderbytejs.s3.amazonaws.com/monaco-emacs/dist/monaco-emacs',},});window.MonacoEnvironment={getWorkerUrl:function(workerId,label){return `data:text/javascript;charset=utf-8,${encodeURIComponent(`
self.MonacoEnvironment={baseUrl:'https://coderbytejs.s3.amazonaws.com/monaco-editor/min/'};importScripts('https://coderbytejs.s3.amazonaws.com/monaco-editor/min/vs/base/worker/workerMain.js');`
            )}`}};var that=this;var language_used=that.challengeInfo.language;var monaco_mode=window.__MAIN_LANGUAGE_LIST[language_used].monaco_mode;var theme='vs-dark';var themeSaved=window.localStorage.getItem(that.editorThemeKey);if(themeSaved){theme=themeSaved;if(theme==='vs'){this.editorLightMode=!0}}
require(['vs/editor/editor.main'],function(){that.editor=monaco.editor.create(document.getElementById('code'),{value:that.initDisplayCode,tabSize:2,scrollBeyondLastLine:!1,theme:theme,scrollBeyondLastColumn:40,language:monaco_mode,minimap:{enabled:!1},});require(['monaco-vim'],function(MonacoVim){that.editorVimFunction=MonacoVim});require(['monaco-emacs'],function(MonacoEmacs){that.editorEmacsFunction=MonacoEmacs});if(that.challengeInfo.editor_type==='frontend'){monaco.languages.typescript.typescriptDefaults.setCompilerOptions({experimentalDecorators:!0})}
if(window.__CUSTOM_EDITOR_SYNTAX_HIGHLIGHTING[that.challengeInfo.language]){monaco.languages.register({id:that.challengeInfo.language.toLowerCase()});monaco.languages.setMonarchTokensProvider(that.challengeInfo.language.toLowerCase(),window.__CUSTOM_EDITOR_SYNTAX_HIGHLIGHTING[that.challengeInfo.language])}
console.log('>> editor setup',that.editor);that.setupEditorFunctions();if(window.location.search.indexOf('runFrontEndTestCases=true')!==-1){var userSavedCode=window.localStorage.getItem('frontEndUserSavedCode');if(userSavedCode.indexOf('__filetreeWithContents')!==-1){var parsedCode=JSON.parse(userSavedCode);that.filetreeWithContents=parsedCode.__filetreeWithContents;for(var i=0;i<that.filetreeWithContents.length;i++){file=that.filetreeWithContents[i];if(that.challengeInfo.language==='JSX'&&file.name==='src/index.js'){userSavedCode=file.content;break}}}
that.editor.setValue(userSavedCode);setTimeout(function(){that.injectFrontendTests()},500)}})},setupEditorFunctions:function(){this.setupCodeSaving();this.getSavedCode();this.setupIntelliSense();if(this.orgInfo){this.checkForAdBlock();this.watchForCopying();this.watchForTabLeaving();this.saveCodeInterval()}},addExtraLanguagesToList:function(){this.dropdownLanguagesFrontend.push(...[{'value':'Angular','display':'Angular'},{'value':'Flutter','display':'Flutter'},{'value':'HTML','display':'HTML/CSS'},{'value':'React','display':'React'},{'value':'Vue.js','display':'Vue.js'},])},checkForAdBlock:function(){if(!this.orgInfo)return;var that=this;if(this.orgInfo&&(this.orgInfo.org_plan!=='Essentials'||this.orgInfo.in_trial)){setTimeout(function(){if(window.__adblock||window.SRLoader===undefined||window.sessionRewind===undefined||that.editor===null){console.log('candidate has adblock enabled');that.modals.copying=!1;that.modals.screenRecordingBlocked=!0}},5000)}},getCodeTemplate:function(){var allTemplates;var templateExists;if(this.projectBasedChallenge){this.initDisplayCode='';return}
if(this.challengeInfo.editor_type==='algorithm'){allTemplates=window.__DEFAULT_CODE_ALGS;templateExists=allTemplates[this.challengeInfo.language]}
if(this.challengeInfo.editor_type==='languagespecific'||this.challengeInfo.editor_type==='graphql'){allTemplates=window.__DEFAULT_CODE_LANG_SPECIFIC;templateExists=allTemplates[this.challengeInfo.challenge_title]}
if(this.challengeInfo.editor_type==='sqlsandbox'){templateExists=function(chalInfo){return `/* write your SQL query below */\n\nSELECT * FROM `+chalInfo.table_name}}
if(this.challengeInfo.editor_type==='mongodbsandbox'){templateExists=function(chalInfo){return `{\n  "find": "${chalInfo.collection_name}"\n}`}}
if(this.challengeInfo.editor_type==='frontend'){allTemplates=window.__DEFAULT_CODE_FRONTEND_MAIN;templateExists=allTemplates[this.challengeInfo.challenge_title]}
if(templateExists){var chalInfoCopy=JSON.parse(JSON.stringify(this.challengeInfo));if(this.challengeInfo.masked_title&&this.challengeInfo.editor_type==='algorithm'){chalInfoCopy.challenge_title=this.challengeInfo.masked_title}
this.initDisplayCode=templateExists(chalInfoCopy).trim()}},setupIntelliSense:function(){if(!this.authObject.username)return;var languageObject=window.__MAIN_LANGUAGE_LIST[this.challengeInfo.language];var lsp_url=languageObject.lsp_url;var monaco_mode=languageObject.monaco_mode;if(lsp_url){console.log('>> editor intellisense starting...');const socket=io(lsp_url,MonacoLSPProxy.SocketOptions);const provider=new MonacoLSPProxy.SocketCompletionItemProvider(socket,this.editor);provider.onInitialized(()=>{console.log('>> editor intellisense setup');monaco.languages.registerCompletionItemProvider(monaco_mode,provider);monaco.languages.registerSignatureHelpProvider(monaco_mode,provider);monaco.languages.registerHoverProvider(monaco_mode,provider)})}},setupCodeSaving:function(){if(this.challengeInfo.editor_type==='sqlsandbox'||this.challengeInfo.editor_type==='mongodbsandbox')return;var that=this;window.onbeforeunload=function(){if(that.saveKey){var curCode=that.editor.getValue();window.localStorage.setItem(that.saveKey,curCode);if(that.projectBasedChallenge&&that.saveKeyFiletree&&that.saveKeyFiletreeContents){window.localStorage.setItem(that.saveKeyFiletree,JSON.stringify(that.filetree));window.localStorage.setItem(that.saveKeyFiletreeContents,JSON.stringify(that.filetreeWithContents))}}}},getSavedCode:function(){var that=this;if(window.location.search.indexOf('runFrontEndTestCases=true')!==-1)return;if(this.projectBasedChallenge){var filetree=window.localStorage.getItem(that.saveKeyFiletree);var filetreeWithContents=window.localStorage.getItem(that.saveKeyFiletreeContents);if(filetree&&filetreeWithContents){console.log('loading saved filetree and contents from earlier');this.filetree=JSON.parse(filetree);this.filetreeWithContents=JSON.parse(filetreeWithContents)}else if(this.challengeInfo.filetree&&this.challengeInfo.filetreeWithContents&&this.challengeInfo.language===this.challengeInfo.languageOriginal){console.log('resetting filetree to custom challenge code');this.filetree=this.challengeInfo.filetree;this.filetreeWithContents=this.challengeInfo.filetreeWithContents}else{console.log('resetting filetree because none exists');this.fileTreeModify({'op':'reset',})}
return}
if(that.saveKey&&window.localStorage&&window.localStorage.getItem(that.saveKey)&&that.challengeInfo.editor_type!=='sqlsandbox'&&that.challengeInfo.editor_type!=='mongodbsandbox'){var savedCode=window.localStorage.getItem(that.saveKey);console.log('loading saved code from earlier');that.editor.setValue(savedCode)}},resetCode:function(){var that=this;var r=confirm("Are you sure you want to reset back to the default code template? If you click OK you will lose your current code.");if(r===!0){window.localStorage.removeItem(that.saveKey);window.localStorage.removeItem(that.saveKeyFiletree);window.localStorage.removeItem(that.saveKeyFiletreeContents);this.saveKey=!1;this.saveKeyFiletree=!1;this.saveKeyFiletreeContents=!1;if(this.challengeInfo.ungraded){window.location.href=window.location.pathname}else{window.location.reload()}}},renderChallengeDescription:function(){var chalDescription=this.challengeInfo.challenge_description;if(!this.editorLightMode){chalDescription=chalDescription.replace(/f7f7f7/g,'314251');chalDescription=chalDescription.replace(/a21818/g,'dc4b4b').replace(/1f5cc3/g,'538cec');chalDescription=chalDescription.replace(/2474b7/g,'4c93ce')}
return chalDescription},toggleEditorTheme:function(){var that=this;this.editorLightMode=!this.editorLightMode;if(this.editorLightMode){monaco.editor.setTheme('vs');window.localStorage.setItem(that.editorThemeKey,'vs')}else{monaco.editor.setTheme('vs-dark');window.localStorage.setItem(that.editorThemeKey,'vs-dark')}},toggleEditorVimMode:function(){var that=this;if(this.editorEmacsMode)return;this.editorVimMode=!this.editorVimMode;if(this.editorVimMode){var statusNode=document.getElementById('vimStatusNode');that.editorVimObject=that.editorVimFunction.initVimMode(that.editor,statusNode)}else{that.editorVimObject.dispose()}},toggleEditorEmacsMode:function(){var that=this;if(this.editorVimMode)return;this.editorEmacsMode=!this.editorEmacsMode;if(this.editorEmacsMode){var statusNode=document.getElementById('vimStatusNode');that.editorEmacsObject=new that.editorEmacsFunction.EmacsExtension(that.editor);that.editorEmacsObject.onDidMarkChange(function(ev){statusNode.textContent=ev?'Mark Set!':'Mark Unset'});that.editorEmacsObject.onDidChangeKey(function(str){statusNode.textContent=str});that.editorEmacsObject.start()}else{that.editorEmacsObject.dispose()}},clearLog:function(){this.consoleOutputLog=[]},changeLanguage:function(selectedOption=!1){var that=this;var newLang=selectedOption?selectedOption.value:this.languageFromDropdown;window.localStorage.setItem('default-language',newLang);console.log('set new default language',newLang);var newUrl=window.location.href.replace(':'+that.challengeInfo.language,':'+newLang);if(this.challengeInfo.ungraded){newUrl=window.location.pathname+'?setLanguage='+newLang}
window.location.href=newUrl},updateEditorLanguage:function(language,node){var monaco_mode;var model=this.editor.getModel();var monaco_mode=window.__MAIN_LANGUAGE_LIST[language].monaco_mode;if(node){var splitFile=node.name.split('.');var ext=splitFile[splitFile.length-1];var extMapping=window.__MAIN_LANGUAGE_LIST_EXTENSION_MAP[ext];if(extMapping){monaco_mode=extMapping}}
monaco.editor.setModelLanguage(model,monaco_mode);if(window.__CUSTOM_EDITOR_SYNTAX_HIGHLIGHTING[language]){monaco.languages.register({id:language.toLowerCase()});monaco.languages.setMonarchTokensProvider(language.toLowerCase(),window.__CUSTOM_EDITOR_SYNTAX_HIGHLIGHTING[language])}},beginTimer:function(){if(!this.orgInfo)return;var that=this;var timerCountDown=this.orgInfo.timer_string;if(this.authObject.isAdmin){__showTimerMessage('(viewing as admin)',that.timerArea)}else{__beginTimer(timerCountDown,that.timerArea);console.log('>> candidate: timer started',timerCountDown)}},saveHighlightedCodeBlock:function(){var that=this;var model=that.editor.getModel();var selectedText=model.getValueInRange(that.editor.getSelection());window.localStorage.setItem(that.copiedCodeKey,selectedText);return selectedText},watchForTabLeaving:function(){if(!this.orgInfo)return;if(this.orgInfo.org_plan==='Essentials')return;var that=this;window.onblur=function(){$.post('/backend/requests/editor/candidate_leaving_tab.php',{challenge:that.challengeInfo.challenge_title,testId:that.orgInfo.test_id,},function(data){})}},saveCodeInterval:function(){var that=this;setInterval(function(){that.submitChallenge(!0)},30000)},watchForCopying:function(){if(!this.orgInfo)return;var that=this;var __copied_from_editor='';var copiedFromPrevPage=window.localStorage.getItem(that.copiedCodeKey);if(copiedFromPrevPage){console.log('last copied code (from previous page) pulled from storage');__copied_from_editor=copiedFromPrevPage}
document.addEventListener('cut',function(e){__copied_from_editor=that.saveHighlightedCodeBlock()});document.addEventListener('copy',function(e){__copied_from_editor=that.saveHighlightedCodeBlock()});this.editor.onDidPaste(function(pasteRange){var model=that.editor.getModel();var pasteText=model.getValueInRange(pasteRange.range);if(pasteText){if(pasteText&&pasteText.length>20&&pasteText!==__copied_from_editor){if(!that.alreadyCopyPasted){that.alreadyCopyPasted=!0;that.modals.copying=!0;console.log('>> showing modal initial time not to copy code')}
console.log('copying code!');$.post('/backend/requests/editor/candidate_copying.php',{challenge:that.challengeInfo.challenge_title,testId:that.orgInfo.test_id,content:pasteText},function(data){console.log('saved',data)})}}});console.log('>> candidate: watching for copying')},filterLanguages:function(){if(!this.orgInfo)return;if(this.orgInfo.languages&&this.orgInfo.languages.length===0)return;var that=this;var allowedLanguages=[];for(var i=0;i<this.dropdownLanguages.length;i++){var langObject=this.dropdownLanguages[i];if(this.orgInfo.languages.indexOf(langObject.value)!==-1){allowedLanguages.push(langObject)}}
this.dropdownLanguages=allowedLanguages},toggleSubmitConfirm:function(){if(!this.confirmSubmitCode){if(this.orgInfo&&!this.challengeInfo.allow_redo){this.modals.assessmentBlockedRedo=!0}}
this.confirmSubmitCode=!this.confirmSubmitCode},submitChallenge:function(savingInBackground=!1){if(this.currentlySubmitting)return;var that=this;var username=this.authObject.username;var code=that.editor?that.editor.getValue().trim():null;var language=this.challengeInfo.language;var title=this.challengeInfo.challenge_title;var editor_type=this.challengeInfo.editor_type;var lastOutput=this.consoleOutputLog[that.consoleOutputLog.length-1];lastOutput=prettyifyJsonStringOutput(lastOutput,0);if(this.projectBasedChallenge){code={'__filetreeWithContents':this.filetreeWithContents};code=JSON.stringify(code)}
var postRoute='';var redirectPage='';console.log('saving code...',title,language);if(!savingInBackground){this.currentlySubmitting=!0}
if(editor_type==='algorithm'){postRoute='/backend/requests/editor/submit_challenge.php';redirectPage='/process/TEMP_'+title+':'+language}
if(editor_type==='languagespecific'||editor_type==='sqlsandbox'||editor_type==='graphql'||editor_type==='mongodbsandbox'){postRoute='/backend/requests/editor/submit_nonalgorithm_challenge.php';redirectPage='/results/'+username+':'+title+':'+language}
if(editor_type==='frontend'){postRoute='/backend/requests/editor/submit_frontend_challenge_manual_queue.php';redirectPage='/results/'+username+':'+title+':'+language}
if(editor_type==='spreadsheet'){postRoute='/backend/requests/editor/submit_spreadsheet_challenge.php';redirectPage='/results/'+username+':'+title+':'+'Spreadsheet';code=this.challengeInfo.spreadsheet_url;lastOutput=this.challengeInfo.spreadsheet_id;window.onbeforeunload=function(){return null}}
if(savingInBackground){postRoute='/backend/requests/editor/submit_challenge.php'}
$.post(postRoute,{user_code:code,challenge_title:title,challenge_language:language,final_output:lastOutput,editor_type:editor_type,},function(data){if(data){try{data=JSON.parse(data);if(data&&data.status==='success'&&!savingInBackground){window.location.assign(redirectPage)}}catch(e){alert('Error (1) submitting code, please reload the page and try again.');console.log('ERROR saving code',e)}}else{alert('Error (2) submitting code, please reload the page and try again.');console.log('ERROR nothing returned from server')}
setTimeout(function(){that.currentlySubmitting=!1},3000)})},loadEditorContentFromFileTreeChange:function(node){var savedCode=this.getEditorContentFromForFileTreeNode(node);this.editor.setValue(savedCode||'')},getEditorContentFromForFileTreeNode:function(node){var file;for(var i=0;i<this.filetreeWithContents.length;i++){file=this.filetreeWithContents[i];if(file.id===node.id){return file.content}}
return''},saveEditorContentBeforeFileTreeChange:function(node){var file;var currentCode=this.editor.getValue().trim();for(var i=0;i<this.filetreeWithContents.length;i++){file=this.filetreeWithContents[i];if(node&&file.id===node.id){this.filetreeWithContents[i].content=currentCode;return}}},fileTreeModify:function(changes){var that=this;console.log('changes to filetree',changes);if(changes.op==='reset'){var language=this.challengeInfo.language;var defaultFileTree=window.__DEFAULT_CODE_PROJECT_BASED_CHALLENGES[this.challengeInfo.challenge_title];if(!defaultFileTree&&this.challengeInfo.ungraded){defaultFileTree=window.__DEFAULT_COLLAB_FILETREE[language]}
if(defaultFileTree){this.filetree=JSON.parse(JSON.stringify(defaultFileTree))}else{this.filetree=[{type:'file',id:'f_'+Math.random().toString().substr(2,5),name:window.__MAIN_LANGUAGE_LIST[this.challengeInfo.language].file_mapping,selected:'true',main:'true',}];console.log('ERROR: filetree structure not found, so resetting based on language')}}
if(changes.op==='setSelected'){if(JSON.stringify(this.filetreeSelected)===JSON.stringify(changes.node))return;if(this.filetreeSelected){this.saveEditorContentBeforeFileTreeChange(this.filetreeSelected);this.$set(this.filetreeSelected,'selected','false')}
this.$set(changes.node,'selected','true');this.filetreeSelected=changes.node;this.filetreeSelectedParentDir=changes.parentNode;if(changes.node.type==='file'&&this.filetreeSelected){this.loadEditorContentFromFileTreeChange(changes.node)}
if(changes.node.type==='file'){this.updateEditorLanguage(this.challengeInfo.language,changes.node)}}
if(changes.op==='newFile'){var newFile,curLanguage;if(changes.typeCreate==='file'){curLanguage=this.challengeInfo.language;newFile={type:'file',id:'f_'+Math.random().toString().substr(2,5),name:'blank.'+window.__MAIN_LANGUAGE_LIST[curLanguage].file_mapping.split('.')[1],}}else{newFile={type:'dir',id:'d_'+Math.random().toString().substr(2,5),name:'dir',closed:'true',contents:[],}}
if(this.filetreeSelected&&this.filetreeSelected.type==='dir'){if(!this.filetreeSelected.contents)this.$set(this.filetreeSelected,'contents',[]);this.filetreeSelected.contents.push(newFile)}else if(this.filetreeSelectedParentDir){if(!this.filetreeSelectedParentDir.contents)this.$set(this.filetreeSelectedParentDir,'contents',[]);this.filetreeSelectedParentDir.contents.push(newFile)}else{this.filetree.push(newFile)}}
if(changes.op==='renamedFile'){if(changes.node.type==='file'){this.updateEditorLanguage(this.challengeInfo.language,changes.node)}}
if(changes.op==='deleteFile'){this.fileTreeConstructWithContent({deleteNode:changes.node})}},fileTreeConstructWithContent:function(opts){if(window.location.search.indexOf('runFrontEndTestCases=true')!==-1)return;var that=this;var filetreeFlat=[];var deleteComplete=!1;var node;function loopInDir(dir,dirName){var innerNode;if(!dir.contents)return;for(var i=0;i<dir.contents.length;i++){innerNode=dir.contents[i];if(opts&&opts.deleteNode){if(innerNode.id===opts.deleteNode.id){that.filetreeSelectedParentDir.contents.splice(i,1);deleteComplete=!0;i=i-1;continue}}
if(innerNode.type==='file'){filetreeFlat.push({id:innerNode.id,name:`${dirName}/${innerNode.name}`,content:that.getEditorContentFromForFileTreeNode(innerNode),});if(innerNode.__initContent&&(!that.challengeInfo.ungraded||that.challengeInfo.language!==that.challengeInfo.languageOriginal)){filetreeFlat[filetreeFlat.length-1].content=innerNode.__initContent;delete innerNode.__initContent}}else if(innerNode.type==='dir'){loopInDir(innerNode,`${dirName}/${innerNode.name}`)}}}
for(var i=0;i<this.filetree.length;i++){node=this.filetree[i];if(opts&&opts.deleteNode){if(node.id===opts.deleteNode.id){this.filetree.splice(i,1);deleteComplete=!0;i=i-1;continue}}
if(node.type==='file'){filetreeFlat.push({id:node.id,name:node.name,content:this.getEditorContentFromForFileTreeNode(node),});if(node.__initContent&&(!this.challengeInfo.ungraded||this.challengeInfo.language!==this.challengeInfo.languageOriginal)){filetreeFlat[filetreeFlat.length-1].content=node.__initContent;delete node.__initContent}}else if(node.type==='dir'){loopInDir(node,node.name)}}
if(deleteComplete){this.fileTreeModify({op:'setSelected',node:this.filetree[0],parentNode:undefined,sendServerUpdate:!0,})}
this.filetreeWithContents=filetreeFlat},updateCodeObject:debounce(function(){if(this.projectBasedChallenge){this.saveEditorContentBeforeFileTreeChange(this.filetreeSelected);this.fileTreeConstructWithContent()}},250),runSpreadsheetTests:function(){var that=this;var spreadsheet_id=this.challengeInfo.spreadsheet_id;var title=this.challengeInfo.challenge_title;this.currentlyRunningCode=!0;$.post('/backend/requests/editor/spreadsheet_run_tests.php',{spreadsheet_id:spreadsheet_id,challenge_title:title},function(dataValidate){that.currentlyRunningCode=!1;try{data=JSON.parse(dataValidate);console.log(data);if(data.test_cases){that.showTestCasesForSpreadsheet=data.test_cases}}catch(e){console.log('Error getting values from spreadsheet.',dataValidate)}})},runCode:function(){var that=this;var input1=this.exampleArgInput;var editor_type=this.challengeInfo.editor_type;var codeObject={code:that.editor.getValue().trim(),inputs:[input1],username:that.authObject.username,};if(this.secondParamRequired){var input2=this.exampleArgInput2;codeObject.inputs.push(input2)}
if(window.location.search.indexOf('runFrontEndTestCases=true')!==-1){codeObject.useFrontEndTestRoute=!0}
if(editor_type==='frontend'&&!codeObject.useFrontEndTestRoute){codeObject.frontEndRenderingKey=this.frontEndRenderingKey}
this.bothTestCasesCorrect=!1;this.currentlyRunningCode=!0;this.showValidatedFeedback=null;setTimeout(function(){that.currentlyRunningCode=!1},7000);if(this.autoClearLog){this.clearLog()}
if(this.projectBasedChallenge&&this.filetreeWithContents.length>1){codeObject.filetree=this.filetreeWithContents}
if(editor_type==='algorithm'||editor_type==='languagespecific'){__evalCode(codeObject,that.challengeInfo,function(output){console.log(output);that.processOutput(output)})}
if(editor_type==='sqlsandbox'){__evalSQLCode(codeObject,that.challengeInfo,function(output){console.log(output);that.processSQLOutput(output)})}
if(editor_type==='mongodbsandbox'){__evalMongoDBCode(codeObject,that.challengeInfo,function(output){console.log(output);that.processOutput(output)})}
if(editor_type==='graphql'){__evalGraphQLCode(codeObject,that.challengeInfo,function(output){console.log(output);that.processOutput(output)})}
if(editor_type==='frontend'){__evalFrontendCode(codeObject,that.challengeInfo,function(output){console.log(output);that.processFrontendOutput(output)})}},runTestCases:function(){var that=this;var counter=0;if(this.autoClearLog){this.clearLog()}
this.bothTestCasesCorrect=!1;this.consoleOutputLog.push('== RUNNING TEST CASES ==','');var loopSamples=2;var samplesToTest=this.challengeInfo.samples.slice(0);if(that.challengeInfo.samples.length==2){loopSamples=1}
if(this.challengeInfo.challenge_title==='HTML Elements'){samplesToTest[0]=$('<textarea />').html(samplesToTest[0]).text();samplesToTest[2]=$('<textarea />').html(samplesToTest[2]).text()}
setTimeout(function(){that.currentlyRunningTests=!1},7000);for(let i=0;i<loopSamples;i++){(function(){var codeObject={code:that.editor.getValue().trim(),inputs:[samplesToTest[i*2]],username:that.authObject.username,};var testCaseObject={input:[samplesToTest[i*2]],correctOutput:samplesToTest[(i*2)+1],};if(that.challengeInfo.output_mod_info){testCaseObject.correctOutput=that.challengeInfo.output_mod_info.final_outputs[i]}
that.currentlyRunningTests=!0;__evalCode(codeObject,that.challengeInfo,function(output){console.log(output);that.processOutput(output,testCaseObject);counter++;if(counter===2){that.currentlyRunningTests=!1;var consoleString=that.consoleOutputLog.toString();var consoleStringLastPart=consoleString.substr(consoleString.lastIndexOf('RUNNING TEST CASES'));var countCorrectOutputs=(consoleStringLastPart.match(/<< CORRECT >>/g)||[]).length;if(countCorrectOutputs===2){that.bothTestCasesCorrect=!0}}})})(i)}},processOutput:function(output,testCaseObject){var that=this;this.currentlyRunningCode=!1;var data=undefined;if(testCaseObject){that.consoleOutputLog.push('== INPUT ==');that.consoleOutputLog.push(testCaseObject.input,'');that.consoleOutputLog.push('== OUTPUT ==')}
try{data=JSON.parse(output)}catch(e){that.consoleOutputLog.push('Error executing code, timeout occurred.');that.errorFromLastOutput=!0}
if(data){if(that.challengeInfo.editor_type==='graphql'){if(data&&data.output){var dataOutput=prettyifyJsonStringOutput(data.output);that.consoleOutputLog.push(dataOutput+'\n');that.errorFromLastOutput=!1;if(data.output.indexOf('errors')!==-1){that.errorFromLastOutput=!0}}}else if(that.challengeInfo.editor_type==='mongodbsandbox'){if(data&&data.output){var dataOutput=prettyifyJsonStringOutput(data.output);that.consoleOutputLog.push(dataOutput+'\n');that.errorFromLastOutput=!1;if(data.output.toLowerCase().indexOf('error')!==-1&&data.output.indexOf('lastErrorObject')===-1){that.errorFromLastOutput=!0}
if(!that.MongoDBOriginalTableOutput){that.MongoDBOriginalTableOutput=prettyifyJsonStringOutput(data.output)}}}else{if(that.challengeInfo.language==='R'){data.stdout=data.stdout.replace(/\[1\] /g,'')}
if(data.stderr!==''){that.consoleOutputLog.push(data.stderr);that.errorFromLastOutput=!0}
if(data.error!==''){that.consoleOutputLog.push(data.error);that.errorFromLastOutput=!0}
if(data.stdout!==''){that.errorFromLastOutput=!1;if(data.stdout.length>=4000){data.stdout+=' ... <OUTPUT TRUNCATED>'}
that.consoleOutputLog.push(data.stdout)}
if(testCaseObject&&data.stdout){var modOutput='"'+data.stdout.trim()+'"';modOutput=modOutput.replace('True','true');modOutput=modOutput.replace('False','false');if(modOutput===testCaseObject.correctOutput||modOutput.replace(/"/g,'')===testCaseObject.correctOutput){that.consoleOutputLog.push('<< CORRECT >>','')}else{that.consoleOutputLog.push('<< WRONG >>');that.consoleOutputLog.push('<< EXPECTED OUTPUT: '+testCaseObject.correctOutput+' >>','')}}
if(that.mobileDeviceType!==null){var dataToShowInDevice=data.stderr===''?data.stdout:data.stderr;that.mobileDeviceContent=window.__DEFAULT_TEMPLATE_FOR_MOBILE_UI[that.challengeInfo.challenge_title](dataToShowInDevice)}}}
if(that.challengeInfo.editor_type==='languagespecific'||that.challengeInfo.editor_type==='graphql'||that.challengeInfo.editor_type==='mongodbsandbox'){that.validateLanguageSpecific()}
setTimeout(function(){var textarea=document.getElementById('consoleOutputMain');if(textarea){textarea.scrollTop=textarea.scrollHeight+50000}},20)},processSQLOutput:function(output){var that=this;this.currentlyRunningCode=!1;try{var data=JSON.parse(output)}catch(e){that.SQLTableOutput='<p class="error">Error executing code</p>'}
if(data&&data.error){if(data.error_msg){that.SQLTableOutput='<p class="error">'+data.error+'<br><br>'+data.error_msg+'</p>'}else{that.SQLTableOutput='<p class="error">'+data.error+'</p>'}}
if(data&&data.output){that.consoleOutputLog.push(JSON.stringify(data.output));that.SQLTableOutput=that.generateSQLTableOutput(data.output);that.SQLShowingOriginalTable=!1;if(!that.SQLOriginalTableOutput){that.SQLOriginalTableOutput=data.output}}
that.validateLanguageSpecific()},processFrontendOutput:function(output){var that=this;setTimeout(function(){that.currentlyRunningCode=!1},2000);$('.placeholderPreview').hide();$('.iframeViewEmbed').show();var iframeSrc=$('.iframeViewEmbed').attr('src');if(output&&output.sandbox_id){$('.iframeViewEmbed').attr('src','https://codesandbox.io/embed/'+output.sandbox_id+'?fontsize=11&hidenavigation=1&view=preview')}else if(iframeSrc===''){$('.iframeViewEmbed').attr('src',output.result.url);this.frontEndRenderingKey=output.result.id}},injectFrontendTests:function(){var that=this;var code=that.editor.getValue().trim();var thisChalTests=window.__DEFAULT_CODE_FRONTEND_TESTS[this.challengeInfo.challenge_title];var urlParams=new URLSearchParams(window.location.search);var username=urlParams.get('username');if(thisChalTests){var codeWithTests=code;if(['JSX','TypeScript','JavaScript'].indexOf(this.challengeInfo.language)!==-1){codeWithTests='window.alert = function() { return null; };\nwindow.confirm = function() { return null; };\nwindow.prompt = function() { return null; };\n\n'+code}
codeWithTests=codeWithTests.replace(/alert\(/g,'//alert(').replace(/confirm\(/g,'//confirm(');if(that.challengeInfo.challenge_title.indexOf('Vue')!==-1){codeWithTests=codeWithTests.replace('</script>',thisChalTests({username:username,challenge:that.challengeInfo.challenge_title,code:code.replace(/'/g,"\\'"),}))}else{codeWithTests=codeWithTests+'\n\n'+thisChalTests({username:username,challenge:that.challengeInfo.challenge_title,code:code.replace(/'/g,"\\'"),})}
if(that.projectBasedChallenge){for(var i=0;i<that.filetreeWithContents.length;i++){file=that.filetreeWithContents[i];if(that.challengeInfo.language==='JSX'&&file.name==='src/index.js'){that.filetreeWithContents[i].content=codeWithTests;break}}}
that.editor.setValue(codeWithTests);that.runCode();setTimeout(function(){that.editor.setValue(code)},4000)}else{console.log('no tests exist yet for this front-end challenge')}},validateLanguageSpecific:function(){var that=this;var title=this.challengeInfo.challenge_title;var lastOutput=this.consoleOutputLog[that.consoleOutputLog.length-1];lastOutput=prettyifyJsonStringOutput(lastOutput,0);var testId=!1;if(this.orgInfo){testId=this.orgInfo.test_id}
console.log('validating answer...');this.showValidatedFeedback=['running','Validating output...'];$.post('/backend/requests/editor/language_specific_validation.php',{output:lastOutput,challenge_title:title,test_id:testId},function(dataValidate){var dataValidate=JSON.parse(dataValidate);if(typeof dataValidate.correct==='boolean'){if(dataValidate.correct===!0){that.showValidatedFeedback=['success','Success! Your output is correct, click Submit above now.']}else{that.showValidatedFeedback=['failure','Your output is incorrect.']}}})},generateSQLTableOutput:function(rows){var table_output='<table cellspacing="0" cellpadding="0"><tr>';var firstRow=rows[0];var headers=Object.keys(firstRow);for(var i=0;i<headers.length;i++){table_output+='<th>'+headers[i]+'</th>'}
table_output+='</tr>';for(var i=0;i<rows.length;i++){table_output+='<tr>'
var rowValues=Object.values(rows[i]);for(var j=0;j<rowValues.length;j++){table_output+='<td>'+rowValues[j]+'</td>'}
table_output+='</tr>'}
table_output+='</table>';return table_output},deleteTableOnSessionEnd:function(){var that=this;window.onbeforeunload=function(){if(that.challengeInfo.table_name){$.post('/backend/requests/editor/sql_sandbox_delete_table.php',{table_name:that.challengeInfo.table_name},function(data){console.log(data)})}}},deleteCollectionOnSessionEnd:function(){var that=this;window.onbeforeunload=function(){if(that.challengeInfo.collection_name){$.post('/backend/requests/editor/mongodb_sandbox_delete_collection.php',{collection_name:that.challengeInfo.collection_name},function(data){console.log(data)})}}},deleteSpreadsheetOnSessionEnd:function(){var that=this;window.onbeforeunload=function(){if(that.challengeInfo.spreadsheet_id){$.post('/backend/requests/editor/spreadsheets_delete_sheet.php',{spreadsheet_id:that.challengeInfo.spreadsheet_id},function(data){console.log(data)})}}},getOriginalTableOnLoad:function(){var that=this;setTimeout(function(){if(that.editor){that.runCode()}else{that.getOriginalTableOnLoad()}},100)},getOriginalCollectionOnLoad:function(){var that=this;setTimeout(function(){if(that.editor){that.runCode()}else{that.getOriginalCollectionOnLoad()}},100)},toggleTables:function(){if(!this.SQLShowingOriginalTable){this.SQLTableOutput=this.generateSQLTableOutput(this.SQLOriginalTableOutput)}else{var lastOutput=this.consoleOutputLog[this.consoleOutputLog.length-1];this.SQLTableOutput=this.generateSQLTableOutput(JSON.parse(lastOutput))}
this.SQLShowingOriginalTable=!this.SQLShowingOriginalTable},toggleDevice:function(){this.mobileDeviceShowing=!this.mobileDeviceShowing},toggleCollections:function(){this.consoleOutputLog.push(this.MongoDBOriginalTableOutput+'\n');setTimeout(function(){var textarea=document.getElementById('consoleOutputMain');textarea.scrollTop=textarea.scrollHeight+50000},20)},guestSubmit:function(){this.modals.guestWantsToSubmit=!0},setupEventListenerOnWebSearch:function(){var that=this;var config={attributes:!0,childList:!0,characterData:!0};var observer=new MutationObserver(function(mutations){console.log('links in search area updated, event listeners added to anchors now!',mutations);that.setupEventListenersOnSearchLinks()});var mainSearchContainer=document.querySelector(that.webSearchProps.mainSearchContainer);if(mainSearchContainer){observer.observe(mainSearchContainer,config)}else{console.log('error: event listeners not added to search results because node is not loaded page')}},setupEventListenersOnSearchLinks:function(){var that=this;var resultRows=$(that.webSearchProps.searchResultRow);for(var i=0;i<resultRows.length;i++){var resultRow=resultRows[i];var anchor=$(resultRow).find('a.gs-title')[0];if(!anchor)continue;anchor.addEventListener('click',function(event){var anchorObject=this;var url=anchorObject.href;if(url.indexOf('.pdf')===-1&&url.indexOf('youtube.com')===-1){event.preventDefault();that.webSearchLoadPageData(anchorObject,event)}})}},webSearchLoadPageData:function(anchorObject,event){var that=this;var mouseX=event.pageX;var mouseY=event.pageY;var url=anchorObject.href;var phrase=$(that.webSearchProps.textArea).val();var windowHeight=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;var iframe=document.querySelector(that.webSearchProps.pageiframeContainer);iframe.src="data:text/html;charset=utf-8,"+"<html>Loading...</html>";this.webSearchProps.toolbarExternalLink=!1;this.webSearchProps.pageModalDataContainerShow=!0;$(that.webSearchProps.pageModalDataContainer).css({top:(mouseY<=(windowHeight/2))?mouseY-20:mouseY-440,left:mouseX-20,});if(this.webSearchCache[url]){console.log('loading page data from cache',url),iframe.src="data:text/html;charset=utf-8,"+this.webSearchCache[url];return}
$.post('/backend/requests/editor/search_get_page_data.php',{url:url},function(pageData){var setPageData;if(!pageData||pageData===''){if(that.webSearchProps.timesAttempted<3){that.webSearchProps.timesAttempted+=1;setPageData="<html>Loading... ("+that.webSearchProps.timesAttempted+")</html>";setTimeout(function(){that.webSearchLoadPageData(anchorObject,event)},1000)}else{that.webSearchProps.timesAttempted=0;that.webSearchProps.toolbarExternalLink=url;setPageData="<html>Failed getting page data, please click <strong>Go to site</strong> above.</html>"}}else{that.webSearchProps.timesAttempted=0;setPageData=escape(pageData);that.webSearchCache[url]=setPageData}
iframe.src="data:text/html;charset=utf-8,"+setPageData});$.post('/backend/requests/editor/candidate_reference_search.php',{url:url,phrase:phrase,challenge:that.challengeInfo.challenge_title,testId:that.orgInfo.test_id,},function(data){console.log('saved ref search',data)})},pageModalAction:function(action){var that=this;if(action==='close'){this.webSearchProps.pageModalDataContainerShow=!1;$(that.webSearchProps.pageModalDataContainer).removeClass('expanded')}},},});$('.homebutton').attr('href','/challenges');$('.submitDisabled').live('click',function(){$.cursorMessage('Cannot submit solution in preview mode.',{hideTimeout:0})});$('.submitDisabled').live('mouseout',function(){$.hideCursorMessage()});interact('.draggable').resizable({edges:{right:!0,bottom:!0},listeners:{move(event){var target=event.target
var x=(parseFloat(target.getAttribute('data-x'))||0)
var y=(parseFloat(target.getAttribute('data-y'))||0)
target.style.width=(event.rect.width-30)+'px'
target.style.height=(event.rect.height-30)+'px'
x+=event.deltaRect.left
y+=event.deltaRect.top
target.style.webkitTransform=target.style.transform='translate('+x+'px,'+y+'px)'
target.setAttribute('data-x',x)
target.setAttribute('data-y',y)}},modifiers:[interact.modifiers.restrictSize({min:{width:100,height:50}})]}).draggable({inertia:!0,modifiers:[interact.modifiers.restrictRect({restriction:'#container',endOnly:!0})],autoScroll:!0,listeners:{move(event){var target=event.target
var x=(parseFloat(target.getAttribute('data-x'))||0)+event.dx
var y=(parseFloat(target.getAttribute('data-y'))||0)+event.dy
target.style.webkitTransform=target.style.transform='translate('+x+'px, '+y+'px)'
target.setAttribute('data-x',x)
target.setAttribute('data-y',y)}}})})